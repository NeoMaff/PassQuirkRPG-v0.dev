// Configuraci√≥n de husos horarios y formatos
const timeZones = [
    {
        id: 'europe_madrid',
        name: 'üá™üá∏ Madrid',
        timezone: 'Europe/Madrid',
        emoji: 'üá™üá∏',
        default: true
    },
    {
        id: 'america_mexico',
        name: 'üá≤üáΩ CDMX',
        timezone: 'America/Mexico_City',
        emoji: 'üá≤üáΩ'
    },
    {
        id: 'america_argentina',
        name: 'üá¶üá∑ Buenos Aires',
        timezone: 'America/Argentina/Buenos_Aires',
        emoji: 'üá¶üá∑'
    },
    {
        id: 'asia_tokyo',
        name: 'üáØüáµ Tokio',
        timezone: 'Asia/Tokyo',
        emoji: 'üáØüáµ'
    },
    {
        id: 'america_newyork',
        name: 'üá∫üá∏ Nueva York',
        timezone: 'America/New_York',
        emoji: 'üá∫üá∏'
    }
];

// Funci√≥n para obtener la configuraci√≥n de una zona horaria por ID
function getTimeZoneConfig(zoneId) {
    return timeZones.find(zone => zone.id === zoneId) || timeZones[0]; // Devuelve Madrid por defecto
}

// Funci√≥n para formatear la hora
function formatTime(date, timezone) {
    return date.toLocaleTimeString('es-ES', {
        timeZone: timezone,
        hour: '2-digit',
        minute: '2-digit',
        hour12: false
    }).toUpperCase(); // Convertir a may√∫sculas
}

// Funci√≥n para formatear la fecha (solo n√∫meros: dd/mm/aaaa)
function formatDate(date, timezone) {
    const options = {
        timeZone: timezone,
        day: '2-digit',
        month: '2-digit',
        year: 'numeric'
    };
    
    // Formatear la fecha y reemplazar los separadores
    return date.toLocaleDateString('es-ES', options)
        .replace(/\./g, '/')  // Reemplazar puntos por barras
        .replace(/-/g, '/')    // Reemplazar guiones por barras
        .replace(/\s+/g, '');  // Eliminar espacios
}

// Funci√≥n para obtener el clima (simulada por ahora)
function getWeather() {
    // Esto es un ejemplo, deber√≠as integrar con una API de clima real
    const weatherOptions = ['‚òÄÔ∏è Soleado', '‚õÖ Nublado', 'üåßÔ∏è Lluvia', '‚õàÔ∏è Tormenta', '‚ùÑÔ∏è Nieve'];
    return weatherOptions[Math.floor(Math.random() * weatherOptions.length)];
}

module.exports = {
    timeZones,
    getTimeZoneConfig,
    formatTime,
    formatDate,
    getWeather
};
